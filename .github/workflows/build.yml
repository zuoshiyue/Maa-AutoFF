name: Build AutoFF Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: 'x64'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install

    - name: Build frontend
      run: |
        cd frontend
        npm run build

    - name: 下载 winlibs GCC
      run: |
        curl -L -o gcc.zip https://github.com/brechtsanders/winlibs_mingw/releases/download/13.2.0-16.0.6-11.0.1-msvcrt-r1/winlibs-x86_64-posix-seh-gcc-13.2.0-mingw-w64msvcrt-11.0.1-r1.zip
        7z x gcc.zip -oC:\winlibs
        echo "C:\winlibs\mingw64\bin" >> $GITHUB_PATH

    - name: Build executable with Nuitka
      run: |
        # 设置环境变量以避免Nuitka尝试下载GCC
        set NUITKA_DOWNLOAD_GCC=no
        python scripts/pack.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: AutoFF-executable
        path: out/AutoFF.exe
        if-no-files-found: error